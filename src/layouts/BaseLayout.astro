---
import "../pages/_app.css";
const { title = 'Clínica Dental', description = 'Odontología integral en Barcelona', locale='es', alternates } = Astro.props;
---

<html lang={locale}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    {/*
      PRELOAD del héroe: por ahora solo PNG (tú aún no tienes AVIF/WebP).
      Cuando generes hero.avif/hero.webp, puedes añadir un segundo preload si quieres.
    */}
    <link rel="preload" as="image" href="/assets/hero.png" />

    {/*
      Acelera el handshake de Google Maps (iframe) para que cuando se inyecte
      cargue más rápido.
    */}
    <link rel="dns-prefetch" href="https://www.google.com">
    <link rel="preconnect" href="https://www.google.com" crossorigin>
    <link rel="dns-prefetch" href="https://maps.googleapis.com">
    <link rel="preconnect" href="https://maps.googleapis.com" crossorigin>
    <link rel="dns-prefetch" href="https://maps.gstatic.com">
    <link rel="preconnect" href="https://maps.gstatic.com" crossorigin>

    {alternates && (
      <>
        <link rel="alternate" hrefLang="es" href={alternates.es} />
        <link rel="alternate" hrefLang="ca" href={alternates.ca} />
        <link rel="alternate" hrefLang="en" href={alternates.en} />
        <link rel="alternate" hrefLang="x-default" href={alternates.es} />
      </>
    )}
  </head>

  <body>
    <slot />

    <!-- =======================
         BOTÓN PERSONALIZADO CRISP
         ======================= -->
    <button id="chat-fab" class="chat-fab" aria-label="Abrir chat">
      <img src="/assets/icons/chat.svg" alt="Chat" />
    </button>

    <!-- =======================
         CRISP CHAT (Loader)
         ======================= -->
    <script is:inline>
      // Cola Crisp
      window.$crisp = window.$crisp || [];

      // 1) Ocultar launcher nativo (si tu plan lo soporta)
      window.$crisp.push(["config", "hide:launcher", true]);

      // ID de tu web en Crisp
      window.CRISP_WEBSITE_ID = "b41a23ca-7594-4f9d-aaa6-3b7ca9cb3157";

      // Carga del script
      (function () {
        const d = document;
        const s = d.createElement("script");
        s.src = "https://client.crisp.chat/l.js";
        s.async = 1;
        d.getElementsByTagName("head")[0].appendChild(s);
      })();
    </script>

    <!-- =======================
         INTEGRACIÓN DEL BOTÓN + FALLBACKS
         ======================= -->
    <script is:inline>
      // 2) Toggle abrir/cerrar chat con el mismo botón
      document.addEventListener("DOMContentLoaded", function () {
        const btn = document.getElementById("chat-fab");
        if (btn) {
          btn.addEventListener("click", function () {
            try {
              window.$crisp?.push(["do", "chat:toggle"]);
            } catch (e) {
              const opened = document.documentElement.classList.contains("crisp-client");
              window.$crisp?.push(["do", opened ? "chat:close" : "chat:open"]);
            }
          });
        }
      });

      // 3) Fallback robusto: ocultar cualquier launcher nativo que aparezca
      function hideCrispLauncherAggressively() {
        try {
          const root = document.querySelector(".crisp-client, #crisp-chatbox");
          if (!root) return;

          const candidates = root.querySelectorAll(
            '.crisp-button, [data-testid="chat-widget-button"], a[href*="crisp.chat"], [class*="launcher"], [class*="button"]'
          );
          candidates.forEach((el) => {
            const isButtonLike =
              (el.tagName === "A" || el.tagName === "BUTTON" || el.getAttribute("role") === "button");
            if (isButtonLike || /button|launcher/i.test(el.className)) {
              el.style.setProperty("display", "none", "important");
              el.style.setProperty("visibility", "hidden", "important");
              el.style.setProperty("opacity", "0", "important");
              el.style.setProperty("pointer-events", "none", "important");
            }
          });
        } catch (_) {}
      }

      window.addEventListener("crisp:ready", function () {
        const style = document.createElement("style");
        style.textContent = `
          .crisp-client .crisp-button,
          .crisp-client [data-testid="chat-widget-button"],
          .crisp-client [class*="crisp-"][class*="button"],
          #crisp-chatbox .crisp-button {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
            pointer-events: none !important;
          }
        `;
        document.head.appendChild(style);
        hideCrispLauncherAggressively();

        const obs = new MutationObserver(() => hideCrispLauncherAggressively());
        obs.observe(document.body, { childList: true, subtree: true });
      });
    </script>
  </body>
</html>
